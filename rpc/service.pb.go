// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: rpc/service.proto

package rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetUserProfileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *GetUserProfileReq) Reset() {
	*x = GetUserProfileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserProfileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserProfileReq) ProtoMessage() {}

func (x *GetUserProfileReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserProfileReq.ProtoReflect.Descriptor instead.
func (*GetUserProfileReq) Descriptor() ([]byte, []int) {
	return file_rpc_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetUserProfileReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type Settings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeZone             string `protobuf:"bytes,1,opt,name=timeZone,proto3" json:"timeZone,omitempty"`
	FullName             string `protobuf:"bytes,2,opt,name=fullName,proto3" json:"fullName,omitempty"`
	TimeFormat           string `protobuf:"bytes,3,opt,name=timeFormat,proto3" json:"timeFormat,omitempty"` // iso date string
	ShouldDefragMeetings bool   `protobuf:"varint,4,opt,name=shouldDefragMeetings,proto3" json:"shouldDefragMeetings,omitempty"`
	AvoidMorningMeetings bool   `protobuf:"varint,5,opt,name=AvoidMorningMeetings,proto3" json:"AvoidMorningMeetings,omitempty"`
}

func (x *Settings) Reset() {
	*x = Settings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Settings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Settings) ProtoMessage() {}

func (x *Settings) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Settings.ProtoReflect.Descriptor instead.
func (*Settings) Descriptor() ([]byte, []int) {
	return file_rpc_service_proto_rawDescGZIP(), []int{1}
}

func (x *Settings) GetTimeZone() string {
	if x != nil {
		return x.TimeZone
	}
	return ""
}

func (x *Settings) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *Settings) GetTimeFormat() string {
	if x != nil {
		return x.TimeFormat
	}
	return ""
}

func (x *Settings) GetShouldDefragMeetings() bool {
	if x != nil {
		return x.ShouldDefragMeetings
	}
	return false
}

func (x *Settings) GetAvoidMorningMeetings() bool {
	if x != nil {
		return x.AvoidMorningMeetings
	}
	return false
}

type GetUserProfileRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email            string    `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Username         string    `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	TimeAvailability []string  `protobuf:"bytes,3,rep,name=timeAvailability,proto3" json:"timeAvailability,omitempty"`
	BookingLinks     []string  `protobuf:"bytes,4,rep,name=bookingLinks,proto3" json:"bookingLinks,omitempty"`
	Settings         *Settings `protobuf:"bytes,5,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *GetUserProfileRes) Reset() {
	*x = GetUserProfileRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserProfileRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserProfileRes) ProtoMessage() {}

func (x *GetUserProfileRes) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserProfileRes.ProtoReflect.Descriptor instead.
func (*GetUserProfileRes) Descriptor() ([]byte, []int) {
	return file_rpc_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserProfileRes) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetUserProfileRes) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetUserProfileRes) GetTimeAvailability() []string {
	if x != nil {
		return x.TimeAvailability
	}
	return nil
}

func (x *GetUserProfileRes) GetBookingLinks() []string {
	if x != nil {
		return x.BookingLinks
	}
	return nil
}

func (x *GetUserProfileRes) GetSettings() *Settings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type GetAvailabilityReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *GetAvailabilityReq) Reset() {
	*x = GetAvailabilityReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvailabilityReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailabilityReq) ProtoMessage() {}

func (x *GetAvailabilityReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailabilityReq.ProtoReflect.Descriptor instead.
func (*GetAvailabilityReq) Descriptor() ([]byte, []int) {
	return file_rpc_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetAvailabilityReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetAvailabilityRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email            string    `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Username         string    `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	TimeAvailability []string  `protobuf:"bytes,3,rep,name=timeAvailability,proto3" json:"timeAvailability,omitempty"`
	BookingLinks     []string  `protobuf:"bytes,4,rep,name=bookingLinks,proto3" json:"bookingLinks,omitempty"`
	Settings         *Settings `protobuf:"bytes,5,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *GetAvailabilityRes) Reset() {
	*x = GetAvailabilityRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvailabilityRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailabilityRes) ProtoMessage() {}

func (x *GetAvailabilityRes) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailabilityRes.ProtoReflect.Descriptor instead.
func (*GetAvailabilityRes) Descriptor() ([]byte, []int) {
	return file_rpc_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetAvailabilityRes) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetAvailabilityRes) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetAvailabilityRes) GetTimeAvailability() []string {
	if x != nil {
		return x.TimeAvailability
	}
	return nil
}

func (x *GetAvailabilityRes) GetBookingLinks() []string {
	if x != nil {
		return x.BookingLinks
	}
	return nil
}

func (x *GetAvailabilityRes) GetSettings() *Settings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type GetBookingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID        string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	BookingLinkID string `protobuf:"bytes,2,opt,name=bookingLinkID,proto3" json:"bookingLinkID,omitempty"`
}

func (x *GetBookingReq) Reset() {
	*x = GetBookingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBookingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBookingReq) ProtoMessage() {}

func (x *GetBookingReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBookingReq.ProtoReflect.Descriptor instead.
func (*GetBookingReq) Descriptor() ([]byte, []int) {
	return file_rpc_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetBookingReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetBookingReq) GetBookingLinkID() string {
	if x != nil {
		return x.BookingLinkID
	}
	return ""
}

type GetBookingRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsActive          bool     `protobuf:"varint,1,opt,name=isActive,proto3" json:"isActive,omitempty"`
	IsMultiUse        bool     `protobuf:"varint,2,opt,name=isMultiUse,proto3" json:"isMultiUse,omitempty"`
	Attendees         []string `protobuf:"bytes,3,rep,name=attendees,proto3" json:"attendees,omitempty"`
	Conferencing      string   `protobuf:"bytes,4,opt,name=conferencing,proto3" json:"conferencing,omitempty"`
	TimeIncrements    []string `protobuf:"bytes,5,rep,name=timeIncrements,proto3" json:"timeIncrements,omitempty"`
	Recurrence        string   `protobuf:"bytes,6,opt,name=recurrence,proto3" json:"recurrence,omitempty"`
	AvailabilityToUse string   `protobuf:"bytes,7,opt,name=availabilityToUse,proto3" json:"availabilityToUse,omitempty"`
}

func (x *GetBookingRes) Reset() {
	*x = GetBookingRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBookingRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBookingRes) ProtoMessage() {}

func (x *GetBookingRes) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBookingRes.ProtoReflect.Descriptor instead.
func (*GetBookingRes) Descriptor() ([]byte, []int) {
	return file_rpc_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetBookingRes) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *GetBookingRes) GetIsMultiUse() bool {
	if x != nil {
		return x.IsMultiUse
	}
	return false
}

func (x *GetBookingRes) GetAttendees() []string {
	if x != nil {
		return x.Attendees
	}
	return nil
}

func (x *GetBookingRes) GetConferencing() string {
	if x != nil {
		return x.Conferencing
	}
	return ""
}

func (x *GetBookingRes) GetTimeIncrements() []string {
	if x != nil {
		return x.TimeIncrements
	}
	return nil
}

func (x *GetBookingRes) GetRecurrence() string {
	if x != nil {
		return x.Recurrence
	}
	return ""
}

func (x *GetBookingRes) GetAvailabilityToUse() string {
	if x != nil {
		return x.AvailabilityToUse
	}
	return ""
}

type SetUserProfileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID           string    `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Email            string    `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Username         string    `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	TimeAvailability []string  `protobuf:"bytes,4,rep,name=timeAvailability,proto3" json:"timeAvailability,omitempty"`
	BookingLinks     []string  `protobuf:"bytes,5,rep,name=bookingLinks,proto3" json:"bookingLinks,omitempty"`
	Settings         *Settings `protobuf:"bytes,6,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *SetUserProfileReq) Reset() {
	*x = SetUserProfileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserProfileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserProfileReq) ProtoMessage() {}

func (x *SetUserProfileReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserProfileReq.ProtoReflect.Descriptor instead.
func (*SetUserProfileReq) Descriptor() ([]byte, []int) {
	return file_rpc_service_proto_rawDescGZIP(), []int{7}
}

func (x *SetUserProfileReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *SetUserProfileReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SetUserProfileReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SetUserProfileReq) GetTimeAvailability() []string {
	if x != nil {
		return x.TimeAvailability
	}
	return nil
}

func (x *SetUserProfileReq) GetBookingLinks() []string {
	if x != nil {
		return x.BookingLinks
	}
	return nil
}

func (x *SetUserProfileReq) GetSettings() *Settings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type SetUserProfileRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetUserProfileRes) Reset() {
	*x = SetUserProfileRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserProfileRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserProfileRes) ProtoMessage() {}

func (x *SetUserProfileRes) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserProfileRes.ProtoReflect.Descriptor instead.
func (*SetUserProfileRes) Descriptor() ([]byte, []int) {
	return file_rpc_service_proto_rawDescGZIP(), []int{8}
}

type SetAvailabilityReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID           string    `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Email            string    `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Username         string    `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	TimeAvailability []string  `protobuf:"bytes,4,rep,name=timeAvailability,proto3" json:"timeAvailability,omitempty"`
	BookingLinks     []string  `protobuf:"bytes,5,rep,name=bookingLinks,proto3" json:"bookingLinks,omitempty"`
	Settings         *Settings `protobuf:"bytes,6,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *SetAvailabilityReq) Reset() {
	*x = SetAvailabilityReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAvailabilityReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAvailabilityReq) ProtoMessage() {}

func (x *SetAvailabilityReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAvailabilityReq.ProtoReflect.Descriptor instead.
func (*SetAvailabilityReq) Descriptor() ([]byte, []int) {
	return file_rpc_service_proto_rawDescGZIP(), []int{9}
}

func (x *SetAvailabilityReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *SetAvailabilityReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SetAvailabilityReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SetAvailabilityReq) GetTimeAvailability() []string {
	if x != nil {
		return x.TimeAvailability
	}
	return nil
}

func (x *SetAvailabilityReq) GetBookingLinks() []string {
	if x != nil {
		return x.BookingLinks
	}
	return nil
}

func (x *SetAvailabilityReq) GetSettings() *Settings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type SetAvailabilityRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetAvailabilityRes) Reset() {
	*x = SetAvailabilityRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAvailabilityRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAvailabilityRes) ProtoMessage() {}

func (x *SetAvailabilityRes) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAvailabilityRes.ProtoReflect.Descriptor instead.
func (*SetAvailabilityRes) Descriptor() ([]byte, []int) {
	return file_rpc_service_proto_rawDescGZIP(), []int{10}
}

type SetBookingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID            string   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	BookingLinkID     string   `protobuf:"bytes,2,opt,name=bookingLinkID,proto3" json:"bookingLinkID,omitempty"`
	IsActive          bool     `protobuf:"varint,3,opt,name=isActive,proto3" json:"isActive,omitempty"`
	IsMultiUse        bool     `protobuf:"varint,4,opt,name=isMultiUse,proto3" json:"isMultiUse,omitempty"`
	Attendees         []string `protobuf:"bytes,5,rep,name=attendees,proto3" json:"attendees,omitempty"`
	Conferencing      string   `protobuf:"bytes,6,opt,name=conferencing,proto3" json:"conferencing,omitempty"`
	TimeIncrements    []string `protobuf:"bytes,7,rep,name=timeIncrements,proto3" json:"timeIncrements,omitempty"`
	Recurrence        string   `protobuf:"bytes,8,opt,name=recurrence,proto3" json:"recurrence,omitempty"`
	AvailabilityToUse string   `protobuf:"bytes,9,opt,name=availabilityToUse,proto3" json:"availabilityToUse,omitempty"`
}

func (x *SetBookingReq) Reset() {
	*x = SetBookingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetBookingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBookingReq) ProtoMessage() {}

func (x *SetBookingReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBookingReq.ProtoReflect.Descriptor instead.
func (*SetBookingReq) Descriptor() ([]byte, []int) {
	return file_rpc_service_proto_rawDescGZIP(), []int{11}
}

func (x *SetBookingReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *SetBookingReq) GetBookingLinkID() string {
	if x != nil {
		return x.BookingLinkID
	}
	return ""
}

func (x *SetBookingReq) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *SetBookingReq) GetIsMultiUse() bool {
	if x != nil {
		return x.IsMultiUse
	}
	return false
}

func (x *SetBookingReq) GetAttendees() []string {
	if x != nil {
		return x.Attendees
	}
	return nil
}

func (x *SetBookingReq) GetConferencing() string {
	if x != nil {
		return x.Conferencing
	}
	return ""
}

func (x *SetBookingReq) GetTimeIncrements() []string {
	if x != nil {
		return x.TimeIncrements
	}
	return nil
}

func (x *SetBookingReq) GetRecurrence() string {
	if x != nil {
		return x.Recurrence
	}
	return ""
}

func (x *SetBookingReq) GetAvailabilityToUse() string {
	if x != nil {
		return x.AvailabilityToUse
	}
	return ""
}

type SetBookingRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetBookingRes) Reset() {
	*x = SetBookingRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetBookingRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBookingRes) ProtoMessage() {}

func (x *SetBookingRes) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBookingRes.ProtoReflect.Descriptor instead.
func (*SetBookingRes) Descriptor() ([]byte, []int) {
	return file_rpc_service_proto_rawDescGZIP(), []int{12}
}

var File_rpc_service_proto protoreflect.FileDescriptor

var file_rpc_service_proto_rawDesc = []byte{
	0x0a, 0x11, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x2b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x22, 0xca, 0x01, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x44,
	0x65, 0x66, 0x72, 0x61, 0x67, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x14, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x44, 0x65, 0x66, 0x72, 0x61,
	0x67, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x41, 0x76, 0x6f,
	0x69, 0x64, 0x4d, 0x6f, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x41, 0x76, 0x6f, 0x69, 0x64, 0x4d, 0x6f,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0xbc, 0x01,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x41, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x10, 0x74, 0x69, 0x6d, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6e, 0x6b,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x25, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x2c, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0xbd, 0x01, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x74,
	0x69, 0x6d, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12,
	0x22, 0x0a, 0x0c, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69,
	0x6e, 0x6b, 0x73, 0x12, 0x25, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x4d, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69,
	0x6e, 0x6b, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x44, 0x22, 0x83, 0x02, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x55, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x55, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x65, 0x6e,
	0x64, 0x65, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x74, 0x74, 0x65,
	0x6e, 0x64, 0x65, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x69, 0x6d,
	0x65, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x22,
	0xd4, 0x01, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x2a, 0x0a, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x62,
	0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0c, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12,
	0x25, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x22, 0xd5, 0x01, 0x0a, 0x12,
	0x53, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10,
	0x74, 0x69, 0x6d, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c,
	0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x25, 0x0a, 0x08,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x22, 0xc1, 0x02, 0x0a, 0x0d, 0x53, 0x65,
	0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69,
	0x6e, 0x6b, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x55, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x55, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x65,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64,
	0x65, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x49,
	0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x2c, 0x0a, 0x11, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x54,
	0x6f, 0x55, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x22, 0x0f, 0x0a,
	0x0d, 0x53, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x32, 0xe7,
	0x02, 0x0a, 0x1b, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x38,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x12, 0x12, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x13, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x1a, 0x13, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x12, 0x0e, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x2e, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x53, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x12, 0x3b, 0x0a,
	0x0f, 0x53, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x12, 0x13, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x0a, 0x53, 0x65,
	0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x2e, 0x53, 0x65, 0x74, 0x42, 0x6f,
	0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x53, 0x65, 0x74, 0x42, 0x6f,
	0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x42, 0x06, 0x5a, 0x04, 0x2f, 0x72, 0x70, 0x63,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_service_proto_rawDescOnce sync.Once
	file_rpc_service_proto_rawDescData = file_rpc_service_proto_rawDesc
)

func file_rpc_service_proto_rawDescGZIP() []byte {
	file_rpc_service_proto_rawDescOnce.Do(func() {
		file_rpc_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_service_proto_rawDescData)
	})
	return file_rpc_service_proto_rawDescData
}

var file_rpc_service_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_rpc_service_proto_goTypes = []interface{}{
	(*GetUserProfileReq)(nil),  // 0: GetUserProfileReq
	(*Settings)(nil),           // 1: Settings
	(*GetUserProfileRes)(nil),  // 2: GetUserProfileRes
	(*GetAvailabilityReq)(nil), // 3: GetAvailabilityReq
	(*GetAvailabilityRes)(nil), // 4: GetAvailabilityRes
	(*GetBookingReq)(nil),      // 5: GetBookingReq
	(*GetBookingRes)(nil),      // 6: GetBookingRes
	(*SetUserProfileReq)(nil),  // 7: SetUserProfileReq
	(*SetUserProfileRes)(nil),  // 8: SetUserProfileRes
	(*SetAvailabilityReq)(nil), // 9: SetAvailabilityReq
	(*SetAvailabilityRes)(nil), // 10: SetAvailabilityRes
	(*SetBookingReq)(nil),      // 11: SetBookingReq
	(*SetBookingRes)(nil),      // 12: SetBookingRes
}
var file_rpc_service_proto_depIdxs = []int32{
	1,  // 0: GetUserProfileRes.settings:type_name -> Settings
	1,  // 1: GetAvailabilityRes.settings:type_name -> Settings
	1,  // 2: SetUserProfileReq.settings:type_name -> Settings
	1,  // 3: SetAvailabilityReq.settings:type_name -> Settings
	0,  // 4: PreferenceManagementService.GetUserProfile:input_type -> GetUserProfileReq
	3,  // 5: PreferenceManagementService.GetAvailability:input_type -> GetAvailabilityReq
	5,  // 6: PreferenceManagementService.GetBooking:input_type -> GetBookingReq
	7,  // 7: PreferenceManagementService.SetUserProfile:input_type -> SetUserProfileReq
	9,  // 8: PreferenceManagementService.SetAvailability:input_type -> SetAvailabilityReq
	11, // 9: PreferenceManagementService.SetBooking:input_type -> SetBookingReq
	2,  // 10: PreferenceManagementService.GetUserProfile:output_type -> GetUserProfileRes
	4,  // 11: PreferenceManagementService.GetAvailability:output_type -> GetAvailabilityRes
	6,  // 12: PreferenceManagementService.GetBooking:output_type -> GetBookingRes
	8,  // 13: PreferenceManagementService.SetUserProfile:output_type -> SetUserProfileRes
	10, // 14: PreferenceManagementService.SetAvailability:output_type -> SetAvailabilityRes
	12, // 15: PreferenceManagementService.SetBooking:output_type -> SetBookingRes
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_rpc_service_proto_init() }
func file_rpc_service_proto_init() {
	if File_rpc_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserProfileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Settings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserProfileRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvailabilityReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvailabilityRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBookingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBookingRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUserProfileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUserProfileRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAvailabilityReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAvailabilityRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetBookingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetBookingRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_service_proto_goTypes,
		DependencyIndexes: file_rpc_service_proto_depIdxs,
		MessageInfos:      file_rpc_service_proto_msgTypes,
	}.Build()
	File_rpc_service_proto = out.File
	file_rpc_service_proto_rawDesc = nil
	file_rpc_service_proto_goTypes = nil
	file_rpc_service_proto_depIdxs = nil
}
